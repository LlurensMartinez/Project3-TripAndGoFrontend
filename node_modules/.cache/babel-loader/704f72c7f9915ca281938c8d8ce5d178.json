{"ast":null,"code":"import _classCallCheck from \"/Users/miguel/ironhack/project/m3-frontend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miguel/ironhack/project/m3-frontend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL,\n      withCredentials: true // only beacause we want to share cookies with the backend server otherwise set it to false\n\n    });\n  }\n\n  _createClass(AuthService, [{\n    key: \"signup\",\n    value: function signup(user) {\n      console.log(user);\n      var username = user.username,\n          password = user.password,\n          phoneNumber = user.phoneNumber,\n          name = user.name;\n      return this.auth.post('/auth/signup', {\n        username: username,\n        password: password,\n        phoneNumber: phoneNumber,\n        name: name\n      }).then(function (_ref) {\n        var data = _ref.data;\n        return data;\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(user) {\n      var username = user.username,\n          password = user.password;\n      return this.auth.post('/auth/login', {\n        username: username,\n        password: password\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        return data;\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return this.auth.post('/auth/logout', {}).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"me\",\n    value: function me(user) {\n      return this.auth.get('/auth/me').then(function (response) {\n        return response.data;\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nvar authService = new AuthService();\nexport default authService;","map":{"version":3,"sources":["/Users/miguel/ironhack/project/m3-frontend-master/src/lib/auth-service.js"],"names":["axios","AuthService","auth","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","user","console","log","username","password","phoneNumber","name","post","then","data","response","get","authService"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,W;;;AACJ,yBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAYF,KAAK,CAACG,MAAN,CAAa;AACvBC,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADE;AAEvBC,MAAAA,eAAe,EAAE,IAFM,CAED;;AAFC,KAAb,CAAZ;AAID;;;;2BAEMC,I,EAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AADW,UAEHG,QAFG,GAEuCH,IAFvC,CAEHG,QAFG;AAAA,UAEOC,QAFP,GAEuCJ,IAFvC,CAEOI,QAFP;AAAA,UAEiBC,WAFjB,GAEuCL,IAFvC,CAEiBK,WAFjB;AAAA,UAE8BC,IAF9B,GAEuCN,IAFvC,CAE8BM,IAF9B;AAGX,aAAO,KAAKb,IAAL,CAAUc,IAAV,CAAe,cAAf,EAA+B;AAACJ,QAAAA,QAAQ,EAARA,QAAD;AAAWC,QAAAA,QAAQ,EAARA,QAAX;AAAqBC,QAAAA,WAAW,EAAXA,WAArB;AAAkCC,QAAAA,IAAI,EAAJA;AAAlC,OAA/B,EACJE,IADI,CACC;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAd;AAAA,OADD,CAAP;AAED;;;0BAEKT,I,EAAM;AAAA,UACFG,QADE,GACqBH,IADrB,CACFG,QADE;AAAA,UACQC,QADR,GACqBJ,IADrB,CACQI,QADR;AAEV,aAAO,KAAKX,IAAL,CAAUc,IAAV,CAAe,aAAf,EAA8B;AAACJ,QAAAA,QAAQ,EAARA,QAAD;AAAWC,QAAAA,QAAQ,EAARA;AAAX,OAA9B,EACJI,IADI,CACC;AAAA,YAAGC,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAd;AAAA,OADD,CAAP;AAED;;;6BAEQ;AACP,aAAO,KAAKhB,IAAL,CAAUc,IAAV,CAAe,cAAf,EAA+B,EAA/B,EACJC,IADI,CACC,UAAAE,QAAQ;AAAA,eAAIA,QAAQ,CAACD,IAAb;AAAA,OADT,CAAP;AAED;;;uBAEET,I,EAAM;AACP,aAAO,KAAKP,IAAL,CAAUkB,GAAV,CAAc,UAAd,EACNH,IADM,CACD,UAAAE,QAAQ;AAAA,eAAIA,QAAQ,CAACD,IAAb;AAAA,OADP,CAAP;AAED;;;;;;AAGH,IAAMG,WAAW,GAAG,IAAIpB,WAAJ,EAApB;AAEA,eAAeoB,WAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL,\n      withCredentials: true // only beacause we want to share cookies with the backend server otherwise set it to false\n    })\n  }\n\n  signup(user) {\n    console.log(user)\n    const { username, password, phoneNumber, name } = user;\n    return this.auth.post('/auth/signup', {username, password, phoneNumber, name})\n      .then(({ data }) => data);\n  }\n\n  login(user) {\n    const { username, password } = user;\n    return this.auth.post('/auth/login', {username, password})\n      .then(({ data }) => data);\n  }\n\n  logout() {\n    return this.auth.post('/auth/logout', {})\n      .then(response => response.data)\n  }\n\n  me(user) {\n    return this.auth.get('/auth/me')\n    .then(response => response.data)\n  }\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}